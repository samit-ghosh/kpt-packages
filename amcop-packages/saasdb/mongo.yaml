# Mongo Service
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: amcop-system
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
      name: mongo
  selector:
    app: mongo
  clusterIP: None
---
# Client service for connecting to any Mongo instance for reads.
apiVersion: v1
kind: Service
metadata:
  name: mongo-read
  namespace: amcop-system
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
      name: mongo
  selector:
    app: mongo
---
# MongoDB statefulset
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: amcop-system
  labels:
    app: mongo
spec:
  serviceName: mongo
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: "registry.hub.docker.com/library/mongo:4.4.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: MONGO_INITDB_DATABASE
          value: "mco"
        ports:
        - containerPort: 27017
        # disable liveness probe when breakpoints set in debugger
        # so K8s doesn't restart unresponsive container
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          tcpSocket:
            port: 27017
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: data
          mountPath: /data/db
          # {{- if not .ENABLE_PERSISTENCE }}
          #       volumes:
          #       - name: data
          #         emptyDir: {}
          # {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      # {{- if ne .STORAGE_CLASS ""}}
      storageClassName: local-path
      # {{- end }}
      resources:
        requests:
          storage: 1Gi
# {{- end }}
