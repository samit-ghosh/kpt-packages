# Source: aai/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: aai-deployment-configmap
  namespace: amcop-system
  labels:
    app: aai
    chart: aai-11.0.0
    release: dev
    heritage: Helm
data:
  haproxy.cfg: |2

    global
            nbproc 4
            cpu-map 1 0
            cpu-map 2 1
            cpu-map 3 2
            cpu-map 4 3
            stats bind-process 4
            log /dev/log    local0
            stats socket /usr/local/etc/haproxy/haproxy.socket mode 660 level admin
            stats timeout 30s
            # it is required else pod will not come up
            maxconn 100000
            user haproxy
            group haproxy
            daemon
            #################################
            # Default SSL material locations#
            #################################
            ca-base /etc/ssl/certs
            crt-base /etc/ssl/private

            # Default ciphers to use on SSL-enabled listening sockets.
            # For more information, see ciphers(1SSL). This list is from:
            # https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
            # An alternative list with additional directives can be obtained from
            # https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
            tune.ssl.default-dh-param 2048
            tune.ssl.cachesize 1000000

    defaults
            log     global
            mode    http
            option  httplog
            option  httpchk
            http-check send meth GET uri /aai/util/echo ver HTTP/1.1 hdr Host aai hdr X-TransactionId  haproxy-0111 hdr X-FromAppId haproxy hdr Accept application/json hdr Authorization 'Basic QUFJOkFBSQ=='
            default-server init-addr none
    #       option  dontlognull
    #       errorfile 400 /etc/haproxy/errors/400.http
    #       errorfile 403 /etc/haproxy/errors/403.http
    #       errorfile 408 /etc/haproxy/errors/408.http
    #       errorfile 500 /etc/haproxy/errors/500.http
    #       errorfile 502 /etc/haproxy/errors/502.http
    #       errorfile 503 /etc/haproxy/errors/503.http
    #       errorfile 504 /etc/haproxy/errors/504.http

            option  http-server-close
            option forwardfor except 127.0.0.1
            retries 6
            option redispatch
            maxconn 100000
            timeout connect 50000
            timeout client  480000
            timeout server  480000
            timeout http-keep-alive 30000

    frontend stats
           bind *:8448
           http-request use-service prometheus-exporter if { path /metrics }
           stats enable
           stats uri /stats
           stats refresh 10s

    frontend IST_8080
            mode http
            bind 0.0.0.0:8080
            log-format "%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC \ %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r"
            option httplog
            log global
            option logasap
            option forwardfor
            capture request header  Host len 100
            capture response header Host len 100
            option log-separate-errors
            option forwardfor
            http-request set-header X-Forwarded-Proto http
            http-request set-header X-Forwarded-Proto http
            http-request add-header X-Forwarded-Port 8080

    #######################
    #ACLS FOR PORT 8446####
    #######################

            acl is_Port_8446_generic path_reg -i ^/aai/v[0-9]+/search/generic-query$
            acl is_Port_8446_nodes path_reg -i ^/aai/v[0-9]+/search/nodes-query$
            acl is_Port_8446_version path_reg -i ^/aai/v[0-9]+/query$
            acl is_dsl path_reg -i ^/aai/v[0-9]+/dsl$
            acl is_named-query path_beg -i /aai/search/named-query
            acl is_search-model path_beg -i /aai/search/model
            use_backend IST_AAI_8446 if is_Port_8446_generic or is_Port_8446_nodes or is_Port_8446_version or is_named-query or is_search-model or is_dsl

            default_backend IST_Default_8447

    #######################
    #ACLS FOR PORT 8446####
    #######################

            acl is_Port_8446_generic path_reg -i ^/aai/v[0-9]+/search/generic-query$
            acl is_Port_8446_nodes path_reg -i ^/aai/v[0-9]+/search/nodes-query$
            acl is_Port_8446_version path_reg -i ^/aai/v[0-9]+/query$
            acl is_dsl path_reg -i ^/aai/v[0-9]+/dsl$
            acl is_named-query path_beg -i /aai/search/named-query
            acl is_search-model path_beg -i /aai/search/model
            use_backend IST_AAI_8446 if is_Port_8446_generic or is_Port_8446_nodes or is_Port_8446_version or is_named-query or is_search-model or is_dsl

            default_backend IST_Default_8447

    #######################
    #DEFAULT BACKEND 8447##
    #######################

    backend IST_Default_8447
            balance leastconn
            stick-table type string len 100 size 200k expire 2m
            stick on path
            http-request set-header X-Forwarded-Port %[src_port]
            http-response set-header Strict-Transport-Security max-age=16000000;\ includeSubDomains;\ preload;
            server-template aai-resources.amcop-system 26 aai-resources.amcop-system.svc.cluster.local:8447 resolvers kubernetes check port 8447

    #######################
    # BACKEND 8446#########
    #######################

    backend IST_AAI_8446
            balance leastconn
            http-request set-header X-Forwarded-Port %[src_port]
            http-response set-header Strict-Transport-Security max-age=16000000;\ includeSubDomains;\ preload;
            server-template aai-traversal.amcop-system 24 aai-traversal.amcop-system.svc.cluster.local:8446 resolvers kubernetes check port 8446
