# Source: topology-controller/templates/rbac/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: topology-controller
  labels:
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/instance: topology-controller
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: topology5g
    app.kubernetes.io/part-of: topology5g
    app.kubernetes.io/managed-by: Helm
  namespace: default
---
# Source: topology-controller/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: topology-manager-role
  namespace: default
rules:
- apiGroups:
  - policy.aarna.com
  resources:
  - topology5gs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy.aarna.com
  resources:
  - topology5gs/finalizers
  verbs:
  - update
- apiGroups:
  - policy.aarna.com
  resources:
  - topology5gs/status
  verbs:
  - get
  - patch
  - update
---
# Source: topology-controller/templates/rbac/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: topology-manager-rolebinding
    app.kubernetes.io/instance: topology-manager-rolebinding
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: topology5g
    app.kubernetes.io/part-of: topology5g
    app.kubernetes.io/managed-by: Helm
  name: topology-manager-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: topology-manager-role
subjects:
- kind: ServiceAccount
  name: topology-controller
  namespace: default
---
# Source: topology-controller/templates/rbac/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: role
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: topology5g
    app.kubernetes.io/part-of: topology5g
    app.kubernetes.io/managed-by: Helm
  name: topology-leader-election-role
  namespace: default
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
# Source: topology-controller/templates/rbac/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: topology5g
    app.kubernetes.io/part-of: topology5g
    app.kubernetes.io/managed-by: Helm
  name: topology-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: topology-leader-election-role
subjects:
- kind: ServiceAccount
  name: topology-controller
  namespace: default
---
# Source: topology-controller/templates/rbac/auth_proxy_service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: topology-controller
    app.kubernetes.io/name: service
    app.kubernetes.io/instance: topology-controller-metrics-service
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: topology5g
    app.kubernetes.io/part-of: topology5g
    app.kubernetes.io/managed-by: Helm
  name: topology-controller-metrics-service
  namespace: default
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: topology-controller
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: topology-controller-configmap
  namespace: default
data:
  aai_address: http://aai
  aai_port: "8443"
  camunda_address: https://camunda
  camunda_port: "8443"
  kafka_broker: kafka1:9092
---
apiVersion: v1
kind: Secret
metadata:
  name: topology-controller-secret
  namespace: default
stringData:
  aai_username: AAI
  aai_password: AAI
  camunda_username: souser
  camunda_password: mypassword
---
# Source: topology-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: topology-controller
  namespace: default
  labels:
    helm.sh/chart: topology-controller-0.1.0
    app.kubernetes.io/name: topology-controller
    app.kubernetes.io/instance: topology-controller
    app.kubernetes.io/version: 1.16.0
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: topology-controller
    app.kubernetes.io/instance: topology-controller
---
# Source: topology-controller/templates/manager/manager.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: topology-controller
  namespace: default
  labels:
    control-plane: topology-controller
    app.kubernetes.io/name: deployment
    app.kubernetes.io/instance: topology-controller
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: topology5g
    app.kubernetes.io/part-of: topology5g
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      control-plane: topology-controller
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: topology-controller
    spec:
      # TODO(user): Uncomment the following code to configure the nodeAffinity expression
      # according to the platforms which are supported by your solution.
      # It is considered best practice to support multiple architectures. You can
      # build your manager image using the makefile target docker-buildx.
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: kubernetes.io/arch
      #             operator: In
      #             values:
      #               - amd64
      #               - arm64
      #               - ppc64le
      #               - s390x
      #           - key: kubernetes.io/os
      #             operator: In
      #             values:
      #               - linux
      securityContext:
        runAsNonRoot: true
        # TODO(user): For common cases that do not require escalating privileges
        # it is recommended to ensure that all your Pods/Containers are restrictive.
        # More info: https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted
        # Please uncomment the following code if your project does NOT have to work on old Kubernetes
        # versions < 1.19 or on vendors versions which do NOT support this field by default (i.e. Openshift < 4.11 ).
        # seccompProfile:
        #   type: RuntimeDefault
      containers:
      - command:
        - /manager
        args:
        - --leader-elect
        image: amcopnightly/topology5g
        tag: v4.0-2024-02-21 # kpt-set: ${image-tag}
        env:
        - name: AAIADDRESS
          valueFrom:
            configMapKeyRef:
              name: topology-controller-configmap
              key: aai_address
        - name: AAIPORT
          valueFrom:
            configMapKeyRef:
              name: topology-controller-configmap
              key: aai_port
        - name: AAIUSERNAME
          valueFrom:
            secretKeyRef:
              name: topology-controller-secret
              key: aai_username
        - name: AAIPASSWORD
          valueFrom:
            secretKeyRef:
              name: topology-controller-secret
              key: aai_password
        - name: CAMUNDAADDRESS
          valueFrom:
            configMapKeyRef:
              name: topology-controller-configmap
              key: camunda_address
        - name: CAMUNDAPORT
          valueFrom:
            configMapKeyRef:
              name: topology-controller-configmap
              key: camunda_port
        - name: CAMUNDAUSERNAME
          valueFrom:
            secretKeyRef:
              name: topology-controller-secret
              key: camunda_username
        - name: CAMUNDAPASSWORD
          valueFrom:
            secretKeyRef:
              name: topology-controller-secret
              key: camunda_password
        - name: KAFKABROKER
          valueFrom:
            configMapKeyRef:
              name: topology-controller-configmap
              key: kafka_broker
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        name: manager
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
      serviceAccountName: topology-controller
      terminationGracePeriodSeconds: 10
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: topology-cluster-role
rules:
- apiGroups:
  - config.porch.kpt.dev
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: topology5gs.policy.aarna.com
spec:
  group: policy.aarna.com
  names:
    kind: Topology5g
    listKind: Topology5gList
    plural: topology5gs
    singular: topology5g
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Topology5gSpec defines the desired state of Topology5g
            properties:
              cnConfig:
                properties:
                  cnInfo:
                    properties:
                      ip:
                        type: string
                      lsPort:
                        type: string
                      port:
                        type: string
                    required:
                    - ip
                    - lsPort
                    - port
                    type: object
                  day0:
                    properties:
                      nop:
                        type: string
                      path:
                        items:
                          type: string
                        type: array
                      version:
                        type: string
                    required:
                    - nop
                    - path
                    - version
                    type: object
                  dayN:
                    properties:
                      nop:
                        type: string
                      path:
                        items:
                          type: string
                        type: array
                      version:
                        type: string
                    required:
                    - nop
                    - path
                    - version
                    type: object
                  pvsInfo:
                    items:
                      properties:
                        targets:
                          items:
                            type: string
                          type: array
                        upstream:
                          properties:
                            Package:
                              type: string
                            Repo:
                              type: string
                            Revision:
                              type: string
                          required:
                          - Package
                          - Repo
                          - Revision
                          type: object
                      required:
                      - targets
                      - upstream
                      type: object
                    type: array
                  relationships:
                    description: Relationships A similar definition available in AAI client. But that represents actual links This relationship represents AAI endpoints, which plugins will use to create actual link. Hence, defining a new data structure to affirm this.
                    properties:
                      relationship:
                        items:
                          properties:
                            aaiLink:
                              type: string
                          required:
                          - aaiLink
                          type: object
                        type: array
                    required:
                    - relationship
                    type: object
                  s3Info:
                    properties:
                      accessKey:
                        type: string
                      accessKeyid:
                        type: string
                      bucketName:
                        type: string
                    required:
                    - accessKey
                    - accessKeyid
                    - bucketName
                    type: object
                  vendor:
                    type: string
                required:
                - cnInfo
                - day0
                - dayN
                - pvsInfo
                - s3Info
                - vendor
                type: object
              esxiDetails:
                properties:
                  address:
                    type: string
                  name:
                    type: string
                  password:
                    type: string
                  resource-version:
                    type: string
                  username:
                    type: string
                required:
                - address
                - name
                - password
                - username
                type: object
              ranEmsConfig:
                properties:
                  cirServerName:
                    type: string
                  day0:
                    properties:
                      nop:
                        type: string
                      path:
                        items:
                          type: string
                        type: array
                      version:
                        type: string
                    required:
                    - nop
                    - path
                    - version
                    type: object
                  dayN:
                    properties:
                      nop:
                        type: string
                      path:
                        items:
                          type: string
                        type: array
                      version:
                        type: string
                    required:
                    - nop
                    - path
                    - version
                    type: object
                  metalServerName:
                    type: string
                  ranEmsEndpoint:
                    type: string
                  ranEmsGnbBootstrapProvisioning:
                    properties:
                      path:
                        type: string
                      version:
                        type: string
                    required:
                    - path
                    - version
                    type: object
                  ranEmsName:
                    type: string
                  ranEmsPassword:
                    type: string
                  ranEmsPort:
                    type: string
                  ranEmsServerName:
                    type: string
                  ranEmsUsername:
                    type: string
                  s3Info:
                    properties:
                      accessKey:
                        type: string
                      accessKeyid:
                        type: string
                      bucketName:
                        type: string
                    required:
                    - accessKey
                    - accessKeyid
                    - bucketName
                    type: object
                  sftpInfo:
                    properties:
                      ipV4:
                        type: string
                      ipV6:
                        type: string
                      passWord:
                        type: string
                      userName:
                        type: string
                    required:
                    - ipV4
                    - ipV6
                    - passWord
                    - userName
                    type: object
                required:
                - cirServerName
                - day0
                - dayN
                - metalServerName
                - ranEmsEndpoint
                - ranEmsGnbBootstrapProvisioning
                - ranEmsName
                - ranEmsPassword
                - ranEmsPort
                - ranEmsServerName
                - ranEmsUsername
                - s3Info
                - sftpInfo
                type: object
              s3Auth:
                properties:
                  access-key:
                    type: string
                  region-name:
                    type: string
                  resource-version:
                    type: string
                  secret:
                    type: string
                required:
                - access-key
                - region-name
                - secret
                type: object
              default:
                type: string
              vServerRequest:
                properties:
                  vmDetails:
                    items:
                      properties:
                        cpus:
                          type: integer
                        datacenter:
                          type: string
                        datastore:
                          type: string
                        disk-size-mb:
                          type: integer
                        failureResponse:
                          type: string
                        image-path:
                          type: string
                        memory-size-mb:
                          type: integer
                        metal-server:
                          type: string
                        network:
                          type: string
                        nwiface-info:
                          properties:
                            nwiface:
                              items:
                                properties:
                                  interface-type:
                                    type: string
                                  nwiface-uuid:
                                    type: string
                                  port-group-name:
                                    type: string
                                  resource-version:
                                    type: string
                                required:
                                - interface-type
                                - nwiface-uuid
                                - port-group-name
                                type: object
                              type: array
                          required:
                          - nwiface
                          type: object
                        resource-pool:
                          type: string
                        resource-version:
                          type: string
                        s3-bucket-name:
                          type: string
                        vm-href:
                          type: string
                        vm-prepare-info:
                          properties:
                            vm-prepare:
                              items:
                                properties:
                                  resource-version:
                                    type: string
                                  script-path:
                                    type: string
                                  software-bundle-path:
                                    type: string
                                  vm-prepare-uuid:
                                    type: string
                                required:
                                - software-bundle-path
                                - vm-prepare-uuid
                                type: object
                              type: array
                          required:
                          - vm-prepare
                          type: object
                        vserver-id:
                          type: string
                        vserver-name:
                          type: string
                        vserver-selflink:
                          type: string
                      required:
                      - cpus
                      - datacenter
                      - datastore
                      - disk-size-mb
                      - image-path
                      - memory-size-mb
                      - metal-server
                      - network
                      - nwiface-info
                      - resource-pool
                      - s3-bucket-name
                      - vm-prepare-info
                      - vserver-id
                      - vserver-name
                      - vserver-selflink
                      type: object
                    type: array
                required:
                - vmDetails
                type: object
              workflowName:
                type: string
            required:
            - cnConfig
            - ranEmsConfig
            - tenant
            - workflowName
            type: object
          status:
            properties:
              checksum:
                type: string
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                format: int32
                type: integer
            required:
            - observedGeneration
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
